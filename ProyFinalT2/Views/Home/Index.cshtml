@{
    ViewData["Title"] = "Listado tableros";
}

<div class="text-center">
    <h1 class="display-4">Mis tableros</h1>
    <button type="button" class="btn btn-primary mb-3" onclick="agregarNuevoTableroAlListado()">
        Agregar nuevo tablero
    </button>
</div>


<div id="contenedor-listado-tableros" class="text-center">
    <div id="reordenable" class="text-start" data-bind="foreach: tableros">
        <div name="tablero" class="border mb-2 p-2" style="cursor: pointer"
             data-bind="click: manejarClickTablero">
            <div data-bind="text: titulo, hidden: esNuevo" class="fw-bold">
            </div>

            <div name="pasos-resumen" data-bind="visible: pasosTotal() > 0">
                <span data-bind="text: pasosRealizados">
                </span>/<span data-bind="text: pasosTotal">
                </span>
                <span data-bind="text: porcentajeCompletado">

                </span>
            </div>

            <input type="text" name="titulo-tablero" autocomplete="off"
                   data-bind="value: titulo, visible: esNuevo,
                    attr: {'data-id': id},
                    event: {focusout: manejarFocusoutTituloTablero}" />

        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTableros">
        No existen tableros para mostrar
    </div>
</div>

<partial name="_ModalEditarTablero" />


@section Scripts {

    <script src="~/js/utilidades.js" asp-append-version="true"></script>
    <script src="~/js/tableros.js" asp-append-version="true"></script>
    <script src="~/js/tareas.js" asp-append-version="true"></script>

    <script>

        const urlTableros = "/api/tableros";
        const urlPasos = "/api/pasos";

        const modalEditarTablero = document.getElementById('modal-editar-tablero');
        const modalEditarTableroBootstrap = new bootstrap.Modal(modalEditarTablero);

        function tableroListadoViewModelFn() {
            var self = this;
            self.tableros = ko.observableArray([]);
            self.cargando = ko.observable(true);

            self.noHayTableros = ko.pureComputed(function () {
                if (self.cargando()) {
                    return false;
                }

                return self.tableros().length === 0;
            })
        }

        function tableroElementoListadoViewModel({ id, titulo, pasosTotal, pasosRealizados }) {
            var self = this;
            self.id = ko.observable(id);
            self.titulo = ko.observable(titulo);

            self.pasosTotal = ko.observable(pasosTotal);
            self.pasosRealizados = ko.observable(pasosRealizados);

            self.esNuevo = ko.pureComputed(function () {
                return self.id() == 0;
            })

            self.porcentajeCompletado = ko.pureComputed(function () {
                const calculo = Math.round(self.pasosRealizados() * 1.0 / self.pasosTotal() * 100);

                return `(${calculo}%)`;
            });
        }

        const tableroEditarVM = {
            id: 0,
            titulo: ko.observable(''),
            descripcion: ko.observable(''),
            pasos: ko.observableArray([])
        }

        const tableroListadoViewModel = new tableroListadoViewModelFn();

        function pasoViewModel({ id, descripcion, realizado, modoEdicion }) {
            var self = this;
            self.id = ko.observable(id || 0);
            self.descripcion = ko.observable(descripcion || '');
            self.descripcionAnterior = '';
            self.realizado = ko.observable(realizado);
            self.modoEdicion = ko.observable(modoEdicion);

            self.esNuevo = ko.pureComputed(function () {
                return self.id() == 0;
            })
        }

        obtenerTableros();

        ko.applyBindings(tableroListadoViewModel, document.getElementById('contenedor-listado-tableros'));
        ko.applyBindings(tableroEditarVM, document.getElementById('modal-editar-tablero'));
    </script>
}
