@{
    ViewData["Title"] = "Listado Tableros";
}

<div class="text-center">
    <h1 class="display-4">Mis Tableros</h1>
    <button type="button" class="btn btn-primary mb-3" onclick="mostrarFormularioCrearTablero()">
        Agregar nuevo tablero
    </button>
</div>

<div id="contenedor-listado-tableros" class="text-center">
    <div class="text-start" data-bind="foreach: tableros">
        <div class="border mb-2 p-2" style="cursor: pointer"
             data-bind="click: () => obtenerTableroConTareas(id())">
            <h4 data-bind="text: nombre"></h4>
            <p data-bind="text: descripcion"></p>
        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTableros">
        No existen tableros para mostrar
    </div>
</div>

<div id="contenedor-tareas" data-bind="visible: tablero">
    <h2 data-bind="text: tablero().nombre"></h2>
    <div data-bind="foreach: tareas">
        <p data-bind="text: titulo"></p>
    </div>
</div>

@section Scripts {
    <script src="~/js/tableros.js" asp-append-version="true"></script>
    <script>
        function tableroListadoViewModelFn() {
            var self = this;
            self.tableros = ko.observableArray([]);
            self.cargando = ko.observable(true);

            self.noHayTableros = ko.pureComputed(() => !self.cargando() && self.tableros().length === 0);
        }

        function tableroElementoListadoViewModel({ id, nombre, descripcion }) {
            var self = this;
            self.id = ko.observable(id);
            self.nombre = ko.observable(nombre);
            self.descripcion = ko.observable(descripcion);
        }

        const tableroListadoViewModel = new tableroListadoViewModelFn();

        obtenerTableros();

        ko.applyBindings(tableroListadoViewModel, document.getElementById('contenedor-listado-tableros'));
    </script>
}
