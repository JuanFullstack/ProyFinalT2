<div class="text-center">
    <h1 class="display-4">Mis tableros</h1>
    <button type="button" class="btn btn-primary mb-3" onclick="agregarNuevoTableroAlListado()">
        Agregar nuevo tablero
    </button>
</div>

<div id="contenedor-listado-tableros" class="text-center">
    <div id="reordenable" class="text-start" data-bind="foreach: tableros">
        <div name="tablero" class="border mb-2 p-2" style="cursor: pointer"
             data-bind="click: manejarClickTablero">
            <div data-bind="text: nombre, hidden: esNuevo" class="fw-bold"></div>

            <input type="text" name="nombre-tablero" autocomplete="off"
                   data-bind="value: nombre, visible: esNuevo,
                    attr: {'data-id': id},
                    event: {focusout: manejarFocusoutNombreTablero}" />
        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTableros">
        No existen tableros para mostrar
    </div>
</div>

@section Scripts {
    <script src="~/js/tableros.js" asp-append-version="true"></script>
    <script src="~/js/utilidades.js" asp-append-version="true"></script>
    <script src="~/js/tareas.js" asp-append-version="true"></script>

    <script>
        const urlTableros = "/api/tableros";

        function tableroListadoViewModelFn() {
            var self = this;
            self.tableros = ko.observableArray([]);
            self.cargando = ko.observable(true);

            self.noHayTableros = ko.pureComputed(function () {
                if (self.cargando()) {
                    return false;
                }
                return self.tableros().length === 0;
            });
        }

        function tableroElementoListadoViewModel({ id, nombre }) {
            var self = this;
            self.id = ko.observable(id);
            self.nombre = ko.observable(nombre);
            self.esNuevo = ko.pureComputed(function () {
                return self.id() == 0;
            });
        }

        const tableroListadoViewModel = new tableroListadoViewModelFn();

        ko.applyBindings(tableroListadoViewModel, document.getElementById('contenedor-listado-tableros'));
    </script>
}
